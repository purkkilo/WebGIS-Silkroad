{"version":3,"sources":["webpack:///./src/components/Map.vue?00bb","webpack:///src/components/Map.vue","webpack:///./src/components/Map.vue?3baf","webpack:///./src/components/Map.vue"],"names":["render","_vm","this","_h","$createElement","_c","_self","roads","hotels","staticStyle","attrs","isDarkMode","_v","ref","zoom","center","mapOptions","on","centerUpdate","zoomUpdate","$event","initMap","url","attribution","_s","currentCenter","lat","lng","mousePosition","currentZoom","length","cityCount","duplicateCount","toggleMarkers","markersHidden","hotelMarkersHidden","map","flyTo","download","_e","staticClass","roadHeaders","scopedSlots","_u","key","fn","item","color","toggleLine","id","isHidden","headers","cities","search","model","value","callback","$$v","expression","proxy","focusOnCity","viewCityData","dialog_city","$set","class","name","road","latlng","staticRenderFns","components","props","data","zoomSnap","showCityInfo","cityMarkers","hotelMarkers","pointList","roadLinesLayer","roadLines","google","hotelData","mounted","document","title","methods","$refs","myMap","mapObject","addEventListener","populateMap","forEach","addCity","push","city","selected","viewed","addMarker","icon","prefix","markerColor","iconUrl","shadowUrl","iconSize","shadowSize","isHotel","marker","hotelIcon","bindPopup","cityIcon","addLayer","drawRoad","weight","opacity","smoothFactor","line","index","removeLayer","roadIndex","findCityFromArray","$vuetify","goTo","cityId","showHotels","getHotels","load","then","location","radius","type","service","nearbySearch","request","stringify","content","JSON","a","createElement","file","Blob","href","URL","createObjectURL","fileName","click","component","VBtn","VCard","VCardActions","VCardSubtitle","VCardText","VCardTitle","VCol","VContainer","VDataTable","VDialog","VDivider","VIcon","VList","VListItem","VListItemContent","VListItemIcon","VListItemTitle","VRow","VSpacer","VTextField"],"mappings":"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","file":"js/chunk-2d207968.71084a8d.js","sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('v-container',[_c('v-row',[_c('v-col',[(_vm.roads && _vm.hotels)?_c('v-card',{staticStyle:{\"padding\":\"30px\"},attrs:{\"id\":\"myMap\",\"elevation\":\"20\",\"dark\":_vm.isDarkMode}},[_c('p',[_vm._v(\" Web app for showing cities along the silkroad, along with some hotel locations close to the cities \")]),_c('v-btn',{attrs:{\"text\":\"\",\"outlined\":\"\",\"href\":\"https://github.com/purkkilo/WebGIS-Silkroad\",\"target\":\"_blank\"}},[_c('v-icon',[_vm._v(\"mdi-github\")]),_vm._v(\" Github \")],1),_c('l-map',{ref:\"myMap\",staticStyle:{\"height\":\"600px\",\"z-index\":\"1\"},attrs:{\"zoom\":_vm.zoom,\"center\":_vm.center,\"options\":_vm.mapOptions},on:{\"update:center\":_vm.centerUpdate,\"update:zoom\":_vm.zoomUpdate,\"ready\":function($event){return _vm.initMap()}}},[_c('l-tile-layer',{attrs:{\"url\":_vm.url,\"attribution\":_vm.attribution}})],1),_c('v-row',[_c('v-col',[_c('v-card-title',[_c('v-icon',[_vm._v(\"mdi-information-variant\")]),_vm._v(\" Map info\")],1),_c('v-card-subtitle',[_c('span',[_c('v-icon',{attrs:{\"color\":\"blue darken-4\"}},[_vm._v(\"mdi-crosshairs\")]),_vm._v(\" Center: (\"+_vm._s(_vm.currentCenter.lat)+\", \"+_vm._s(_vm.currentCenter.lng)+\")\"),_c('br'),_c('v-icon',[_vm._v(\"mdi-mouse-move-vertical\")]),_vm._v(\" Mouse position: \"+_vm._s(_vm.mousePosition)),_c('br'),_c('v-icon',[_vm._v(\"mdi-magnify-plus-outline\")]),_vm._v(\" Zoom: \"+_vm._s(_vm.currentZoom)+\" \")],1)])],1),_c('v-col',[_c('v-card-title',[_c('v-icon',[_vm._v(\"mdi-information-variant\")]),_vm._v(\" Road info\")],1),_c('v-card-subtitle',[_c('span',[_c('v-icon',{attrs:{\"color\":\"grey darken-2\"}},[_vm._v(\"mdi-road-variant\")]),_vm._v(_vm._s(_vm.roads.length)+\" roads\"),_c('br'),_c('v-icon',{attrs:{\"color\":\"blue lighten-1\"}},[_vm._v(\"mdi-city\")]),_vm._v(_vm._s(_vm.cityCount)+\" unique, \"+_vm._s(_vm.cityCount + _vm.duplicateCount)+\" total cities \"),_c('br'),_vm._v(\" City info and coordinates fetched with leaflet-geosearch and OpenStreetMapProvider \"),_c('br'),_vm._v(\" Hoteldata fetched from Google Places API \")],1)])],1)],1),_c('v-card-actions',[_c('v-row',[_c('v-col',[_c('v-btn',{attrs:{\"rounded\":\"\",\"outlined\":\"\",\"color\":\"blue\"},on:{\"click\":function($event){return _vm.toggleMarkers(false)}}},[(_vm.markersHidden)?_c('v-icon',[_vm._v(\"mdi-eye\")]):_c('v-icon',[_vm._v(\"mdi-eye-off\")]),_vm._v(_vm._s(_vm.markersHidden ? \"Show cities\" : \"Hide cities\"))],1)],1),_c('v-col',[_c('v-btn',{attrs:{\"rounded\":\"\",\"outlined\":\"\",\"color\":\"blue darken-2\"},on:{\"click\":function($event){return _vm.toggleMarkers(true)}}},[(_vm.hotelMarkersHidden)?_c('v-icon',[_vm._v(\"mdi-eye\")]):_c('v-icon',[_vm._v(\"mdi-eye-off\")]),_vm._v(_vm._s(_vm.hotelMarkersHidden ? \"Show hotels\" : \"Hide hotels\"))],1)],1),_c('v-col',[_c('v-btn',{attrs:{\"rounded\":\"\",\"outlined\":\"\",\"color\":\"blue darken-2\"},on:{\"click\":function($event){return _vm.map.flyTo([32.54681317351517, 67.7821466853562], 2)}}},[_c('v-icon',{attrs:{\"color\":\"green\"}},[_vm._v(\"mdi-restart\")]),_vm._v(\"Reset map\")],1)],1)],1),_c('v-row',[_c('v-col',[_c('v-btn',{attrs:{\"text\":\"\",\"small\":\"\",\"rounded\":\"\",\"outlined\":\"\",\"color\":\"blue darken-2\"},on:{\"click\":function($event){return _vm.download(\n                    _vm.roads,\n                    'silkroadCityData.json',\n                    'application/json',\n                    true\n                  )}}},[_c('v-icon',{attrs:{\"color\":\"green\"}},[_vm._v(\"mdi-download\")]),_vm._v(\"Download City Data\")],1)],1),_c('v-col',[_c('v-btn',{attrs:{\"text\":\"\",\"small\":\"\",\"rounded\":\"\",\"outlined\":\"\",\"color\":\"blue darken-2\"},on:{\"click\":function($event){return _vm.download(\n                    _vm.hotels,\n                    'silkroadHotelData.json',\n                    'application/json',\n                    true\n                  )}}},[_c('v-icon',{attrs:{\"color\":\"green\"}},[_vm._v(\"mdi-download\")]),_vm._v(\"Download Hotel Data\")],1)],1)],1)],1)],1):_vm._e()],1)],1),_c('v-row',[_c('v-col',[(_vm.roads)?_c('v-card',{attrs:{\"dark\":_vm.isDarkMode,\"elevation\":\"20\"}},[_c('v-card-title',[_vm._v(\"Roads\")]),_c('v-data-table',{staticClass:\"elevation-20\",attrs:{\"headers\":_vm.roadHeaders,\"items\":_vm.roads,\"item-key\":\"id\",\"sort-by\":\"id\"},scopedSlots:_vm._u([{key:\"item.isHidden\",fn:function(ref){\n                  var item = ref.item;\nreturn [_c('v-btn',{attrs:{\"rounded\":\"\",\"outlined\":\"\",\"small\":\"\",\"color\":item.color},on:{\"click\":function($event){return _vm.toggleLine(item.id)}}},[(item.isHidden)?_c('v-icon',[_vm._v(\"mdi-eye\")]):_c('v-icon',[_vm._v(\"mdi-eye-off\")]),_vm._v(_vm._s(item.isHidden ? \"Show\" : \"Hide\"))],1)]}}],null,true)})],1):_vm._e()],1),_c('v-col',[_c('v-card',{attrs:{\"dark\":_vm.isDarkMode,\"elevation\":\"20\",\"id\":\"cities\"}},[_c('v-card-title',[_vm._v(\"Cities\")]),_c('v-data-table',{staticClass:\"elevation-20\",attrs:{\"headers\":_vm.headers,\"items\":_vm.cities,\"item-key\":\"id\",\"sort-by\":\"id\",\"search\":_vm.search,\"loading\":!_vm.roads || !_vm.hotels},scopedSlots:_vm._u([{key:\"top\",fn:function(){return [_c('v-col',[_c('v-text-field',{attrs:{\"append-icon\":\"mdi-magnify\",\"label\":\"Search\",\"single-line\":\"\",\"hide-details\":\"\"},model:{value:(_vm.search),callback:function ($$v) {_vm.search=$$v},expression:\"search\"}})],1)]},proxy:true},{key:\"item.selected\",fn:function(ref){\n                  var item = ref.item;\nreturn [_c('v-btn',{attrs:{\"rounded\":\"\",\"outlined\":\"\",\"small\":\"\",\"color\":\"blue\"},on:{\"click\":function($event){return _vm.focusOnCity(item.id)}}},[_c('v-icon',[_vm._v(\"mdi-map-search\")]),_vm._v(\"Focus\")],1)]}},{key:\"item.viewed\",fn:function(ref){\n                  var item = ref.item;\nreturn [_c('v-btn',{attrs:{\"rounded\":\"\",\"outlined\":\"\",\"small\":\"\",\"color\":\"blue lighten-2\"},on:{\"click\":function($event){return _vm.viewCityData(item.id)}}},[_c('v-icon',[_vm._v(\"mdi-text-box-search-outline\")]),_vm._v(\"View\")],1),_c('v-dialog',{attrs:{\"max-width\":\"600\"},model:{value:(_vm.dialog_city[item.id]),callback:function ($$v) {_vm.$set(_vm.dialog_city, item.id, $$v)},expression:\"dialog_city[item.id]\"}},[_c('v-card',{attrs:{\"dark\":_vm.isDarkMode}},[_c('v-card-title',{class:{\n                    'text-h5 grey darken-3': _vm.isDarkMode,\n                    'text-h5 grey lighten-2': !_vm.isDarkMode,\n                  }},[_vm._v(\" \"+_vm._s(item.name)+\" \")]),_c('v-card-text',[_c('v-list',[_c('v-list-item',[_c('v-list-item-icon',[_c('v-icon',{attrs:{\"color\":\"grey darken-2\"}},[_vm._v(\"mdi-road-variant\")])],1),_c('v-list-item-content',[_c('v-list-item-title',[_vm._v(_vm._s(item.road))])],1)],1),_c('v-list-item',[_c('v-list-item-icon',[_c('v-icon',{attrs:{\"color\":\"grey darken-2\"}},[_vm._v(\"mdi-crosshairs-gps\")])],1),_c('v-list-item-content',[_c('v-list-item-title',[_vm._v(_vm._s(item.latlng))])],1)],1)],1)],1),_c('v-divider'),_c('v-card-actions',[_c('v-spacer'),_c('v-btn',{attrs:{\"color\":\"primary\",\"text\":\"\"},on:{\"click\":function($event){return _vm.$set(_vm.dialog_city, item.id, false)}}},[_vm._v(\" Close \")])],1)],1)],1)]}}],null,true)})],1)],1)],1),_c('v-row',[_c('v-col',{attrs:{\"md\":\"3\"}},[_c('v-card',{staticStyle:{\"padding\":\"10px\",\"background\":\"rgba(1,1,1,0.5)\"},attrs:{\"dark\":\"\"}},[_vm._v(\" Photo by \"),_c('a',{attrs:{\"href\":\"https://unsplash.com/@manuelmeurisse?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText\"}},[_vm._v(\"Manuel Meurisse\")]),_vm._v(\" on \"),_c('a',{attrs:{\"href\":\"https://unsplash.com/?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText\"}},[_vm._v(\"Unsplash\")])])],1)],1)],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n  <v-container>\r\n    <v-row>\r\n      <v-col>\r\n        <v-card\r\n          id=\"myMap\"\r\n          elevation=\"20\"\r\n          :dark=\"isDarkMode\"\r\n          style=\"padding:30px\"\r\n          v-if=\"roads && hotels\"\r\n        >\r\n          <p>\r\n            Web app for showing cities along the silkroad, along with some hotel\r\n            locations close to the cities\r\n          </p>\r\n          <v-btn\r\n            text\r\n            outlined\r\n            href=\"https://github.com/purkkilo/WebGIS-Silkroad\"\r\n            target=\"_blank\"\r\n          >\r\n            <v-icon>mdi-github</v-icon> Github\r\n          </v-btn>\r\n          <l-map\r\n            :zoom=\"zoom\"\r\n            :center=\"center\"\r\n            :options=\"mapOptions\"\r\n            style=\"height: 600px;z-index:1\"\r\n            @update:center=\"centerUpdate\"\r\n            @update:zoom=\"zoomUpdate\"\r\n            @ready=\"initMap()\"\r\n            ref=\"myMap\"\r\n          >\r\n            <l-tile-layer :url=\"url\" :attribution=\"attribution\" />\r\n          </l-map>\r\n          <v-row>\r\n            <v-col>\r\n              <v-card-title\r\n                ><v-icon>mdi-information-variant</v-icon> Map info</v-card-title\r\n              >\r\n              <v-card-subtitle>\r\n                <span\r\n                  ><v-icon color=\"blue darken-4\">mdi-crosshairs</v-icon> Center:\r\n                  ({{ currentCenter.lat }}, {{ currentCenter.lng }})<br />\r\n                  <v-icon>mdi-mouse-move-vertical</v-icon> Mouse position:\r\n                  {{ mousePosition }}<br />\r\n                  <v-icon>mdi-magnify-plus-outline</v-icon> Zoom:\r\n                  {{ currentZoom }}\r\n                </span>\r\n              </v-card-subtitle>\r\n            </v-col>\r\n            <v-col>\r\n              <v-card-title\r\n                ><v-icon>mdi-information-variant</v-icon> Road\r\n                info</v-card-title\r\n              >\r\n              <v-card-subtitle>\r\n                <span\r\n                  ><v-icon color=\"grey darken-2\">mdi-road-variant</v-icon\r\n                  >{{ roads.length }} roads<br />\r\n                  <v-icon color=\"blue lighten-1\">mdi-city</v-icon\r\n                  >{{ cityCount }} unique,\r\n                  {{ cityCount + duplicateCount }} total cities <br />\r\n                  City info and coordinates fetched with leaflet-geosearch and\r\n                  OpenStreetMapProvider <br />\r\n                  Hoteldata fetched from Google Places API\r\n                </span>\r\n              </v-card-subtitle>\r\n            </v-col>\r\n          </v-row>\r\n\r\n          <v-card-actions>\r\n            <v-row>\r\n              <v-col>\r\n                <v-btn\r\n                  rounded\r\n                  outlined\r\n                  color=\"blue\"\r\n                  @click=\"toggleMarkers(false)\"\r\n                  ><v-icon v-if=\"markersHidden\">mdi-eye</v-icon\r\n                  ><v-icon v-else>mdi-eye-off</v-icon\r\n                  >{{ markersHidden ? \"Show cities\" : \"Hide cities\" }}</v-btn\r\n                >\r\n              </v-col>\r\n              <v-col>\r\n                <v-btn\r\n                  rounded\r\n                  outlined\r\n                  color=\"blue darken-2\"\r\n                  @click=\"toggleMarkers(true)\"\r\n                  ><v-icon v-if=\"hotelMarkersHidden\">mdi-eye</v-icon\r\n                  ><v-icon v-else>mdi-eye-off</v-icon\r\n                  >{{\r\n                    hotelMarkersHidden ? \"Show hotels\" : \"Hide hotels\"\r\n                  }}</v-btn\r\n                >\r\n              </v-col>\r\n              <v-col>\r\n                <v-btn\r\n                  rounded\r\n                  outlined\r\n                  color=\"blue darken-2\"\r\n                  @click=\"map.flyTo([32.54681317351517, 67.7821466853562], 2)\"\r\n                  ><v-icon color=\"green\">mdi-restart</v-icon>Reset map</v-btn\r\n                >\r\n              </v-col>\r\n            </v-row>\r\n            <v-row>\r\n              <v-col>\r\n                <v-btn\r\n                  text\r\n                  small\r\n                  rounded\r\n                  outlined\r\n                  color=\"blue darken-2\"\r\n                  @click=\"\r\n                    download(\r\n                      roads,\r\n                      'silkroadCityData.json',\r\n                      'application/json',\r\n                      true\r\n                    )\r\n                  \"\r\n                  ><v-icon color=\"green\">mdi-download</v-icon>Download City\r\n                  Data</v-btn\r\n                >\r\n              </v-col>\r\n              <v-col>\r\n                <v-btn\r\n                  text\r\n                  small\r\n                  rounded\r\n                  outlined\r\n                  color=\"blue darken-2\"\r\n                  @click=\"\r\n                    download(\r\n                      hotels,\r\n                      'silkroadHotelData.json',\r\n                      'application/json',\r\n                      true\r\n                    )\r\n                  \"\r\n                  ><v-icon color=\"green\">mdi-download</v-icon>Download Hotel\r\n                  Data</v-btn\r\n                >\r\n              </v-col>\r\n            </v-row>\r\n          </v-card-actions>\r\n        </v-card>\r\n      </v-col>\r\n    </v-row>\r\n    <v-row>\r\n      <v-col>\r\n        <v-card :dark=\"isDarkMode\" elevation=\"20\" v-if=\"roads\">\r\n          <v-card-title>Roads</v-card-title>\r\n          <v-data-table\r\n            :headers=\"roadHeaders\"\r\n            :items=\"roads\"\r\n            item-key=\"id\"\r\n            sort-by=\"id\"\r\n            class=\"elevation-20\"\r\n          >\r\n            <template v-slot:[`item.isHidden`]=\"{ item }\">\r\n              <v-btn\r\n                rounded\r\n                outlined\r\n                small\r\n                :color=\"item.color\"\r\n                @click=\"toggleLine(item.id)\"\r\n                ><v-icon v-if=\"item.isHidden\">mdi-eye</v-icon\r\n                ><v-icon v-else>mdi-eye-off</v-icon\r\n                >{{ item.isHidden ? \"Show\" : \"Hide\" }}</v-btn\r\n              >\r\n            </template>\r\n          </v-data-table>\r\n        </v-card>\r\n      </v-col>\r\n      <v-col>\r\n        <v-card :dark=\"isDarkMode\" elevation=\"20\" id=\"cities\">\r\n          <v-card-title>Cities</v-card-title>\r\n          <v-data-table\r\n            :headers=\"headers\"\r\n            :items=\"cities\"\r\n            item-key=\"id\"\r\n            sort-by=\"id\"\r\n            class=\"elevation-20\"\r\n            :search=\"search\"\r\n            :loading=\"!roads || !hotels\"\r\n          >\r\n            <template v-slot:top>\r\n              <v-col>\r\n                <v-text-field\r\n                  v-model=\"search\"\r\n                  append-icon=\"mdi-magnify\"\r\n                  label=\"Search\"\r\n                  single-line\r\n                  hide-details\r\n                ></v-text-field>\r\n              </v-col>\r\n            </template>\r\n            <template v-slot:[`item.selected`]=\"{ item }\">\r\n              <v-btn\r\n                rounded\r\n                outlined\r\n                small\r\n                color=\"blue\"\r\n                @click=\"focusOnCity(item.id)\"\r\n                ><v-icon>mdi-map-search</v-icon>Focus</v-btn\r\n              >\r\n            </template>\r\n            <template v-slot:[`item.viewed`]=\"{ item }\">\r\n              <v-btn\r\n                rounded\r\n                outlined\r\n                small\r\n                color=\"blue lighten-2\"\r\n                @click=\"viewCityData(item.id)\"\r\n                ><v-icon>mdi-text-box-search-outline</v-icon>View</v-btn\r\n              >\r\n              <v-dialog v-model=\"dialog_city[item.id]\" max-width=\"600\">\r\n                <v-card :dark=\"isDarkMode\">\r\n                  <v-card-title\r\n                    class=\"\"\r\n                    v-bind:class=\"{\r\n                      'text-h5 grey darken-3': isDarkMode,\r\n                      'text-h5 grey lighten-2': !isDarkMode,\r\n                    }\"\r\n                  >\r\n                    {{ item.name }}\r\n                  </v-card-title>\r\n\r\n                  <v-card-text>\r\n                    <v-list>\r\n                      <v-list-item>\r\n                        <v-list-item-icon>\r\n                          <v-icon color=\"grey darken-2\"\r\n                            >mdi-road-variant</v-icon\r\n                          >\r\n                        </v-list-item-icon>\r\n                        <v-list-item-content>\r\n                          <v-list-item-title>{{ item.road }}</v-list-item-title>\r\n                        </v-list-item-content>\r\n                      </v-list-item>\r\n                      <v-list-item>\r\n                        <v-list-item-icon>\r\n                          <v-icon color=\"grey darken-2\"\r\n                            >mdi-crosshairs-gps</v-icon\r\n                          >\r\n                        </v-list-item-icon>\r\n                        <v-list-item-content>\r\n                          <v-list-item-title>{{\r\n                            item.latlng\r\n                          }}</v-list-item-title>\r\n                        </v-list-item-content>\r\n                      </v-list-item>\r\n                    </v-list>\r\n                  </v-card-text>\r\n\r\n                  <v-divider></v-divider>\r\n\r\n                  <v-card-actions>\r\n                    <v-spacer></v-spacer>\r\n                    <v-btn\r\n                      color=\"primary\"\r\n                      text\r\n                      @click=\"$set(dialog_city, item.id, false)\"\r\n                    >\r\n                      Close\r\n                    </v-btn>\r\n                  </v-card-actions>\r\n                </v-card>\r\n              </v-dialog>\r\n            </template>\r\n          </v-data-table>\r\n        </v-card>\r\n      </v-col>\r\n    </v-row>\r\n    <v-row>\r\n      <v-col md=\"3\">\r\n        <v-card dark style=\"padding:10px;background: rgba(1,1,1,0.5);\">\r\n          Photo by\r\n          <a\r\n            href=\"https://unsplash.com/@manuelmeurisse?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText\"\r\n            >Manuel Meurisse</a\r\n          >\r\n          on\r\n          <a\r\n            href=\"https://unsplash.com/?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText\"\r\n            >Unsplash</a\r\n          >\r\n        </v-card>\r\n      </v-col>\r\n    </v-row>\r\n  </v-container>\r\n</template>\r\n\r\n<script>\r\nimport L from \"leaflet\";\r\nimport \"leaflet.awesome-markers\";\r\n//import { LMap, LTileLayer } from \"vue2-leaflet\";\r\n//import { OpenStreetMapProvider } from \"leaflet-geosearch\";   // Used in getting city coordinates\r\n//import { Loader } from \"@googlemaps/js-api-loader\";          // Used in getting hotels from given city\r\n\r\nexport default {\r\n  name: \"Map\",\r\n  components: {},\r\n  props: [\"isDarkMode\"],\r\n  data() {\r\n    return {\r\n      zoom: 3,\r\n      center: L.latLng(30.751277776257812, 74.61914062500001),\r\n      url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\",\r\n      attribution:\r\n        '&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors',\r\n      currentZoom: 3,\r\n      currentCenter: L.latLng(30.751277776257812, 74.61914062500001),\r\n      mapOptions: {\r\n        zoomSnap: 0.5,\r\n      },\r\n      showCityInfo: false,\r\n      dialog_city: {},\r\n      map: null,\r\n      roads: null,\r\n      hotels: null,\r\n      //provider: new OpenStreetMapProvider({ language: \"en\" }),\r\n      cityMarkers: [],\r\n      hotelMarkers: [],\r\n      cityCount: 0,\r\n      duplicateCount: 0,\r\n      pointList: [],\r\n      roadLinesLayer: L.layerGroup(),\r\n      roadLines: [],\r\n      cities: [],\r\n      headers: [\r\n        {\r\n          text: \"Name\",\r\n          value: \"name\",\r\n          align: \"start\",\r\n        },\r\n        { text: \"Road\", value: \"road\", align: \"center\" },\r\n        {\r\n          text: \"Focus on map\",\r\n          value: \"selected\",\r\n          align: \"center\",\r\n          sortable: false,\r\n        },\r\n        {\r\n          text: \"View info\",\r\n          value: \"viewed\",\r\n          align: \"center\",\r\n          sortable: false,\r\n        },\r\n      ],\r\n      roadHeaders: [\r\n        {\r\n          text: \"Name\",\r\n          value: \"name\",\r\n          align: \"start\",\r\n        },\r\n        { text: \"Cities\", value: \"cities.length\", align: \"center\" },\r\n        {\r\n          text: \"Show/Hide\",\r\n          value: \"isHidden\",\r\n          align: \"center\",\r\n          sortable: false,\r\n        },\r\n      ],\r\n      search: \"\",\r\n      markersHidden: false,\r\n      hotelMarkersHidden: false,\r\n      google: null,\r\n      hotelData: {\r\n        cities: [],\r\n      },\r\n      mousePosition: \"( 0, 0 )\",\r\n    };\r\n  },\r\n  mounted() {\r\n    document.title = \"WebGIS silkroad\";\r\n    // Just wanted to test importing modules dynamically\r\n    import(\"../data/data.json\").then((module) => {\r\n      this.roads = module.roads;\r\n    });\r\n    import(\"../data/hotels.json\").then((module) => {\r\n      this.hotels = module.cities;\r\n    });\r\n    /* Used to fetch hotels from google places api, data cached to /data/hotels.json\r\n      this.google = new Loader({\r\n        apiKey: <Apikey>,\r\n        version: \"weekly\",\r\n        libraries: [\"places\"],\r\n        language: \"en\",\r\n      });\r\n    */\r\n  },\r\n  methods: {\r\n    // Get reference for the map, and populate it\r\n    initMap() {\r\n      this.map = this.$refs.myMap.mapObject;\r\n      // For getting mouseposition\r\n      this.map.addEventListener(\"mousemove\", (event) => {\r\n        let lat = Math.round(event.latlng.lat * 10000) / 10000;\r\n        let lng = Math.round(event.latlng.lng * 10000) / 10000;\r\n        this.mousePosition = `( ${lat}, ${lng} )`;\r\n      });\r\n      this.populateMap();\r\n    },\r\n    zoomUpdate(zoom) {\r\n      this.currentZoom = zoom;\r\n    },\r\n    centerUpdate(center) {\r\n      this.currentCenter = center;\r\n    },\r\n    // Populate the map with markers for cities and hotels, and polylines for roads\r\n    populateMap() {\r\n      this.cityCount = 0;\r\n      this.roads.forEach((road) => {\r\n        this.pointList = [];\r\n        road.cities.forEach((city) => {\r\n          this.cities.find((c) => c.name === city.name)\r\n            ? ++this.duplicateCount\r\n            : ++this.cityCount;\r\n\r\n          // Add marker for city\r\n          this.addCity(city, road.name);\r\n          // Add point for polyline\r\n          this.pointList.push([city.lat, city.lng]);\r\n          // Show hotels located in the city\r\n          this.showHotels(city);\r\n        });\r\n        // Draw the road\r\n        this.drawRoad(this.pointList, road);\r\n      });\r\n    },\r\n    // Add city to array and add marker to it's place on the map\r\n    addCity(city, road) {\r\n      let id = this.cities.length\r\n        ? this.cities[this.cities.length - 1].id + 1\r\n        : 0; // Id for city to find them from the array\r\n      // Add city to array for data-table\r\n      this.cities.push({\r\n        id: id,\r\n        name: city.name,\r\n        lat: city.lat,\r\n        lng: city.lng,\r\n        latlng: `${city.lat}, ${city.lng}`,\r\n        road: road,\r\n        selected: false,\r\n        viewed: false,\r\n      });\r\n      // Place marker\r\n      this.addMarker([city.lat, city.lng], city.name, null);\r\n    },\r\n    // Add marker for city/hotel\r\n    addMarker(coords, label, isHotel) {\r\n      let id = this.cityMarkers.length\r\n        ? this.cityMarkers[this.cityMarkers.length - 1].id + 1\r\n        : 0; // Id for marker to find them from the array\r\n\r\n      let marker;\r\n      // Different icons for hotel and city\r\n      const cityIcon = L.AwesomeMarkers.icon({\r\n        icon: \"city\",\r\n        prefix: \"mdi\",\r\n        markerColor: \"blue\",\r\n      });\r\n      const hotelIcon = L.icon({\r\n        iconUrl:\r\n          \"https://maps.gstatic.com/mapfiles/place_api/icons/v1/png_71/lodging-71.png\",\r\n        shadowUrl:\r\n          \"https://maps.gstatic.com/mapfiles/place_api/icons/v1/png_71/lodging-71.png\",\r\n        iconSize: [20, 20], // size of the icon\r\n        shadowSize: [20, 20], // size of the shadow\r\n      });\r\n\r\n      // If marker is for hotel, use hotel's icon\r\n      if (isHotel) {\r\n        marker = L.marker(coords, {\r\n          icon: hotelIcon,\r\n          iconSize: [15, 15],\r\n          shadowSize: [15, 15],\r\n        });\r\n        marker.bindPopup(\r\n          `<h1>${label} <i class=\"blue--text mdi mdi-bed icon-white\"></i></h1><p><b>${coords[0]}, ${coords[1]}</b> <i class=\"mdi mdi-crosshairs-gps icon-white\"></p>`,\r\n          {\r\n            closeButton: true,\r\n          }\r\n        );\r\n      } else {\r\n        // else use marker with city icon\r\n        marker = L.marker(coords, {\r\n          icon: cityIcon,\r\n          iconSize: [15, 15],\r\n          shadowSize: [15, 15],\r\n        });\r\n        marker.bindPopup(\r\n          `<h1>${label} <i class=\"blue--text mdi mdi-city icon-white\"></i></h1><p><b>${coords[0]}, ${coords[1]}</b> <i class=\"mdi mdi-crosshairs-gps icon-white\"></p>`,\r\n          {\r\n            closeButton: true,\r\n          }\r\n        );\r\n      }\r\n\r\n      // Add marker to map\r\n      marker.id = id;\r\n      this.map.addLayer(marker);\r\n\r\n      // depending on if the marker is for hotel, choose array\r\n      if (isHotel) {\r\n        this.hotelMarkers.push(marker);\r\n      } else {\r\n        this.cityMarkers.push(marker);\r\n      }\r\n    },\r\n    drawRoad(pointList, road) {\r\n      // Add array of coordinates to line and form polyline from it\r\n      const line = L.polyline(pointList, {\r\n        color: road.color,\r\n        weight: 3,\r\n        opacity: 0.5,\r\n        smoothFactor: 1,\r\n      });\r\n      line.id = road.id;\r\n      line.isHidden = false;\r\n      this.roadLines.push(line);\r\n      // Add the current line to layer of roadLinesLayer for toggling/deleting roadLines\r\n      this.roadLinesLayer.addLayer(line);\r\n      // Show road on the map\r\n      line\r\n        .bindPopup(\r\n          `<h1>${road.name} <i class=\"blue--text mdi mdi-road-variant icon-white\"></i></h1><div class=\"headline\">${road.cities.length} cities</div>`\r\n        )\r\n        .addTo(this.map);\r\n    },\r\n    // Toggle road's visibility on the map\r\n    toggleLine(id) {\r\n      // Find road in the array\r\n      let index = this.roadLines.findIndex((l) => l.id === id);\r\n      // if found (should be found always, but still)\r\n      if (index > -1) {\r\n        const line = this.roadLines[index];\r\n        // If road is hidden, show it and vice versa\r\n        if (!line.isHidden) {\r\n          this.map.removeLayer(this.roadLines[index]);\r\n        } else {\r\n          this.map.addLayer(this.roadLines[index]);\r\n        }\r\n        line.isHidden = !line.isHidden;\r\n\r\n        // Update road on the data-table\r\n        const roadIndex = this.roads.findIndex((l) => l.id === id);\r\n        if (roadIndex > -1) {\r\n          const road = this.roads[roadIndex];\r\n          road.isHidden = !road.isHidden;\r\n        }\r\n      }\r\n    },\r\n    // Toggle markers visibility on the map\r\n    toggleMarkers(isHotel) {\r\n      // if isHotel, hide/show hotelmarkers\r\n      if (isHotel) {\r\n        if (!this.hotelMarkersHidden) {\r\n          this.hotelMarkers.forEach((marker) => {\r\n            this.map.removeLayer(marker);\r\n          });\r\n        } else {\r\n          this.hotelMarkers.forEach((marker) => {\r\n            this.map.addLayer(marker);\r\n          });\r\n        }\r\n        this.hotelMarkersHidden = !this.hotelMarkersHidden;\r\n      } else {\r\n        // otherwise hide/show normal markers\r\n        if (!this.markersHidden) {\r\n          this.cityMarkers.forEach((marker) => {\r\n            this.map.removeLayer(marker);\r\n          });\r\n        } else {\r\n          this.cityMarkers.forEach((marker) => {\r\n            this.map.addLayer(marker);\r\n          });\r\n        }\r\n        this.markersHidden = !this.markersHidden;\r\n      }\r\n    },\r\n    findCityFromArray(cityId) {\r\n      let index = this.cities.findIndex((c) => c.id === cityId);\r\n      if (index > -1) {\r\n        return this.cities[index];\r\n      } else {\r\n        return null;\r\n      }\r\n    },\r\n    // Zoom in on the city on the map\r\n    focusOnCity(cityId) {\r\n      const city = this.findCityFromArray(cityId);\r\n      if (city) {\r\n        // Go to the map on the UI\r\n        this.$vuetify.goTo(\"#myMap\");\r\n        // Zoom the map into the city\r\n        this.map.flyTo([city.lat, city.lng], 14);\r\n      }\r\n    },\r\n    // Show all of city's data\r\n    viewCityData(cityId) {\r\n      const city = this.findCityFromArray(cityId);\r\n      if (city) {\r\n        this.$set(this.dialog_city, cityId, true);\r\n        this.showCityInfo = true;\r\n      }\r\n    },\r\n    // Add hotels to the map\r\n    showHotels(city) {\r\n      const index = this.hotels.findIndex((c) => c.name === city.name);\r\n      if (index > -1) {\r\n        const hotels = this.hotels[index].hotels;\r\n        hotels.forEach((hotel) => {\r\n          this.addMarker([hotel.lat, hotel.lng], hotel.name, true);\r\n        });\r\n      }\r\n    },\r\n    /*\r\n      Fetch 3 hotels from given city\r\n      Unused now, but was used when mapping hotels to json file\r\n      Could've used database and/or google services,\r\n      but decided to store all relevant data locally because\r\n      there isn't that much information to store. Also silk road cities aren't changing their place anymore.\r\n    */\r\n    getHotels(city) {\r\n      // Load google api\r\n      this.google.load().then((google) => {\r\n        // Dummy map to use the nearbysearch\r\n        const map = new google.maps.Map(document.getElementById(\"map\"), {\r\n          center: L.latLng(city.lat, city.lng),\r\n          zoom: 15,\r\n        });\r\n        // init service and request\r\n        const service = new google.maps.places.PlacesService(map);\r\n        const request = {\r\n          location: L.latLng(city.lat, city.lng),\r\n          radius: 100000,\r\n          type: [\"hotel\"],\r\n        };\r\n        // Fetch hotels\r\n        service.nearbySearch(request, async (results, status) => {\r\n          if (status == google.maps.places.PlacesServiceStatus.OK) {\r\n            if (!results.length) {\r\n              console.log(\"No results for: \" + city.name);\r\n            } else {\r\n              const hotels = [];\r\n              // If found more than 3 results, limit the amount to 3\r\n              // Found a lot more hotels in test searches so decided to limit it\r\n              const limit = results.length > 3 ? 3 : results.length;\r\n              for (var i = 0; i < limit; i++) {\r\n                const hotel = {\r\n                  name: results[i].name,\r\n                  lat: results[i].geometry.location.lat(),\r\n                  lng: results[i].geometry.location.lng(),\r\n                };\r\n                hotels.push(hotel);\r\n              }\r\n              this.hotelData.cities.push({\r\n                name: city.name,\r\n                hotels: hotels,\r\n              });\r\n            }\r\n          }\r\n        });\r\n      });\r\n    },\r\n    // Download files to client using blobs\r\n    // Used in creating json files from api data\r\n    download(content, fileName, contentType, stringify) {\r\n      if (stringify) {\r\n        content = JSON.stringify(content);\r\n      }\r\n      var a = document.createElement(\"a\");\r\n      var file = new Blob([content], { type: contentType });\r\n      a.href = URL.createObjectURL(file);\r\n      a.download = fileName;\r\n      a.click();\r\n    },\r\n  },\r\n};\r\n</script>\r\n","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Map.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Map.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./Map.vue?vue&type=template&id=0d5e8167&\"\nimport script from \"./Map.vue?vue&type=script&lang=js&\"\nexport * from \"./Map.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports\n\n/* vuetify-loader */\nimport installComponents from \"!../../node_modules/vuetify-loader/lib/runtime/installComponents.js\"\nimport { VBtn } from 'vuetify/lib/components/VBtn';\nimport { VCard } from 'vuetify/lib/components/VCard';\nimport { VCardActions } from 'vuetify/lib/components/VCard';\nimport { VCardSubtitle } from 'vuetify/lib/components/VCard';\nimport { VCardText } from 'vuetify/lib/components/VCard';\nimport { VCardTitle } from 'vuetify/lib/components/VCard';\nimport { VCol } from 'vuetify/lib/components/VGrid';\nimport { VContainer } from 'vuetify/lib/components/VGrid';\nimport { VDataTable } from 'vuetify/lib/components/VDataTable';\nimport { VDialog } from 'vuetify/lib/components/VDialog';\nimport { VDivider } from 'vuetify/lib/components/VDivider';\nimport { VIcon } from 'vuetify/lib/components/VIcon';\nimport { VList } from 'vuetify/lib/components/VList';\nimport { VListItem } from 'vuetify/lib/components/VList';\nimport { VListItemContent } from 'vuetify/lib/components/VList';\nimport { VListItemIcon } from 'vuetify/lib/components/VList';\nimport { VListItemTitle } from 'vuetify/lib/components/VList';\nimport { VRow } from 'vuetify/lib/components/VGrid';\nimport { VSpacer } from 'vuetify/lib/components/VGrid';\nimport { VTextField } from 'vuetify/lib/components/VTextField';\ninstallComponents(component, {VBtn,VCard,VCardActions,VCardSubtitle,VCardText,VCardTitle,VCol,VContainer,VDataTable,VDialog,VDivider,VIcon,VList,VListItem,VListItemContent,VListItemIcon,VListItemTitle,VRow,VSpacer,VTextField})\n"],"sourceRoot":""}